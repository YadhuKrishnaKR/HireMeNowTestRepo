@inject ICompanyService _companyService

@using HireMeNow_BlazorApp.Interfaces;
@using HireMeNow_BlazorApp.Models;
@inject NavigationManager navmanager
@inject IUserService userService
<style>
	.memberBox{
		box-shadow: 2px 7px 9px 0px #262323e3;
		display: flex;
		flex-direction: column;
		align-items: center;
		margin-top:5px;
	}
</style>
<div class="row bg-light">
	<div class="col-md-10 bg-white border rounded m-2 p-5">
		@if (userList.Count > 0)
		{
			<div class="row">
				@foreach (var user in userList)
				{
					<div class="col-md-5 mr-5 bg-white p-4 memberBox">
						@if (user.Image==null)
						{
							<img src="publicassets/images/gray-user.png" alt="" class="img-fluid " width="150px" />
						}
						else
						{

							<img src="publicassets/images/gray-user.png" alt="" class="img-fluid " width="150px">
						}
						<br>
						<strong></strong><br>
						<h5>@user.FirstName<br></h5>
						<em>UserId : @user.Id</em>
						<h5>
							@user.Designation<br>
							@user.Phone<br>
							@user.Email
						</h5>
						<button class="btn bg-primary rounded-pill mx-auto d-block" @onclick="@(() => View(user.Id))">View</button>
						@*<NavLink class="nav-link d-flex align-items-center text-white text-decoration-none" href="RemoveMember/@user.id">*@
						<button class="btn btn-outline-danger rounded-pill mx-auto d-block" @onclick="@(() => removeMember(user.Id))" >Remove</button>

						@*</NavLink>*@
					</div>
				}


			</div>
		}
	</div>
</div>

@code {
	[Parameter]
	public Guid id { get; set; }
	//[Parameter]
	//public User user { get; set; }

	List<User> userList;
	public void removeMember(Guid id)
	{
		navmanager.NavigateTo($"removeMember/{id}");
	}

	public void View(Guid id)
	{
		navmanager.NavigateTo($"jobprovider/profile/{id}");
	}

	protected override void OnInitialized()
	{
		//Guid cmpId = new Guid("1d8303fb-c1e1-4fa6-a2e1-272472b2beb4");
		var loggedUser = userService.getLoggedUser();
		if (loggedUser.CompanyId != null)
		{
			userList = _companyService.memberListing(loggedUser.CompanyId);
		}
	}
}
